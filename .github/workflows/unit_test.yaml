name: Unit test
on:
  pull_request:
    # https://github.community/t/dont-run-actions-on-draft-pull-requests/16817/19
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main
  push:
    branches:
      # Comment this out to run when committing on the branch.
      - main
  workflow_dispatch:
  schedule:
    # Run this once a day even if there are no commit.
    - cron:  '0 0 */1 * *'

jobs:

  unit_tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        if: github.event.pull_request.draft == false
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run fast tests
        # https://github.community/t/dont-run-actions-on-draft-pull-requests/16817/19
        # Do not run on draft pull requests.
        if: github.event.pull_request.draft == false
        env:
          CELERY_BROKER_URL: "dummy" # ${CELERY_BROKER_URL}
          CELERY_RESULT_BACKEND: "dummy" # ${CELERY_RESULT_BACKEND}
          CELERY_ACCEPT_CONTENT: '["dummy"]' # ${CELERY_ACCEPT_CONTENT}
          CELERY_TASK_SERIALIZER: "dummy" # ${CELERY_TASK_SERIALIZER}
          CELERY_RESULT_SERIALIZER: "dummy" # ${CELERY_RESULT_SERIALIZER}
          CELERY_TIMEZONE: "dummy" # ${CELERY_TIMEZONE}
          DJANGO_SECRET_KEY: "dummy" # ${DJANGO_SECRET_KEY}
          POSTGRES_HOST: "dummy" # ${POSTGRES_HOST}
          POSTGRES_DB: "dummy" # ${POSTGRES_DB}
          POSTGRES_PORT: "dummy" # ${POSTGRES_PORT}
          POSTGRES_USER: "dummy" #${POSTGRES_USER}
          POSTGRES_PASSWORD: "dummy" #${POSTGRES_PASSWORD}
        run: python manage.py test

      - name: Post status if was triggered manually
        if: ${{ always() && github.event_name == 'workflow_dispatch' }}
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          context: "Unit test run"
          description: 'Job is done (manual run)'
          state: ${{ job.status }}
          sha: ${{ github.sha }}
          target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

        # TODO(Nikola): It can slack, telegram, etc.
#      - name: Send Telegram notification for failure
#        if: ${{ failure() && github.ref_name == 'master' }}
#        uses: appleboy/telegram-action@master
#        with:
#          to: ${{ secrets.TG_BUILDBOT_CHATID }}
#          token: ${{ secrets.TG_BUILDBOT_TOKEN }}
#          message: |
#            ðŸ’£ UNIT TESTS FAILED
#            Build failure '${{ github.workflow }}'
#            Repo: '${{ github.repository }}'
#            Branch: '${{ github.ref_name }}'
#            Event: '${{ github.event_name }}'
#            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
